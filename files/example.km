{"root":{"data":{"text":"AS  Computer Science","image":"https://portal.yangboyu.net/static/image/0dd4c8f014a78920208cdff264ed23b7","imageTitle":"","imageSize":{"width":200,"height":53}},"children":[{"data":{"text":"第七章 系统软件","expandState":"collapse"},"children":[{"data":{"text":"Operating system:"},"children":[{"data":{"text":"An operating system is a program or set of program that manages the operation of the computer. It is a program that controls the execution of all other program and acts as an intermediary between users and computers. "},"children":[]},{"data":{"text":"概览"},"children":[{"data":{"text":" tasks carried out by the operating system "},"children":[{"data":{"text":"Process management"},"children":[{"data":{"text":"Create process"},"children":[]},{"data":{"text":"Launch process "},"children":[]},{"data":{"text":"Schedule process"},"children":[]}]},{"data":{"text":"Memory management "},"children":[{"data":{"text":"Allocation memory"},"children":[]},{"data":{"text":"Memory protection"},"children":[]},{"data":{"text":"Memory extension"},"children":[]}]},{"data":{"text":"I/O control"},"children":[{"data":{"text":"Install  I/O"},"children":[]},{"data":{"text":"Uninstall I/O"},"children":[]},{"data":{"text":"I/O protection"},"children":[]}]},{"data":{"text":"File management"},"children":[{"data":{"text":"Create file"},"children":[]},{"data":{"text":"File Disk Management"},"children":[]},{"data":{"text":"File Protection"},"children":[]},{"data":{"text":"Directory Management"},"children":[]}]},{"data":{"text":"Interruption management"},"children":[]}]},{"data":{"text":"The interface between user and hardware"},"children":[{"data":{"text":"Command line"},"children":[]},{"data":{"text":"System call"},"children":[{"data":{"text":"编程时调用系统给的接口"},"children":[]}]},{"data":{"text":" Icon "},"children":[]}]}]}]},{"data":{"text":"Utility programs"},"children":[{"data":{"text":"Disk formatter"},"children":[{"data":{"text":"It is a utility program that divides the disk into smaller areas."},"children":[]},{"data":{"text":"The disk surface is divides into a number of tracks and each track is divides into number of smaller blocks called sectors."},"children":[]},{"data":{"text":"One of the tracks is used as an index to hold information of all data stored in various sectors of the disk. "},"children":[]}]},{"data":{"text":"Virus checker"},"children":[{"data":{"text":"It is a utility program that continually compares a dictionary of known virus against the files as accessed by the computer."},"children":[]},{"data":{"text":"It alerts the user if any of the files matches a virus “signature”."},"children":[]}]},{"data":{"text":"Defragmenter software "},"children":[{"data":{"text":"Defragmenter software is utility software designed to increase access speed by rearranging files stored on a disk to occupy contiguous storage location, a technique called defragmentation. "},"children":[]}]},{"data":{"text":"File compression "},"children":[{"data":{"text":"A file compression software reduces the size of a file by cutting out much of the duplication of data in the file. "},"children":[]}]},{"data":{"text":"Backup software "},"children":[{"data":{"text":"A backup is simple utility program that automatically copies the contents of files to another location."},"children":[]}]},{"data":{"text":"Disk repair software"},"children":[{"data":{"text":"It is a diagnostic utility that checks and repairs file system errors on a disk drive,"},"children":[]},{"data":{"text":"has ability to detect and recover from physical errors on the disk. It can also repair crosslinked files. "},"children":[{"data":{"text":"Cross-linked files 补充"},"children":[]},{"data":{"text":"Cross-linked files are FAT entries that point to the same cluster. Cross-linked files are created when the computer is improperly shut down or an application abnormally aborts. Cross-linked files can be corrected using disk correction utilities, such"},"children":[]}]}]},{"data":{"text":"Library program "},"children":[{"data":{"text":"Library program is a collection of stored modules that can be reused by program developer in various software developments whenever required.  "},"children":[{"data":{"text":"(1) Library routine are very valuable to programmer because they have already been rewritten and tested so the programmer is saved a lot of work. "},"children":[]},{"data":{"text":"(2) The code exists in complied form so it does not need to be recompiled when it is used. "},"children":[]}]}]}]},{"data":{"text":"DLL"},"children":[{"data":{"text":"DLL is one of the library programs"},"children":[{"data":{"text":"Code is saved separately from the main .EXE files"},"children":[]},{"data":{"text":"A DLL file is a shared library file "},"children":[]},{"data":{"text":"Code is only loaded into main memory when required at run-time "},"children":[]},{"data":{"text":"The DDL file can be made available to several applications (at the same time) "},"children":[]}]},{"data":{"text":"The benefit of using DLL "},"children":[{"data":{"text":"The executable file is smaller"},"children":[]},{"data":{"text":"the executable does not contain all the library routines "},"children":[]},{"data":{"text":" there is no need to recompile the main program "},"children":[]},{"data":{"text":"Saving space in memory"},"children":[]}]},{"data":{"text":"The drawback of using DLL "},"children":[{"data":{"text":"The executable code is not self-contained"},"children":[]},{"data":{"text":"Unexpected changes to the DLL file / corrupted DLL file could mean the program stops working as expected. "},"children":[]},{"data":{"text":"Malicious changes to the DLL file could install a virus on the user’s computer"},"children":[]}]}]},{"data":{"text":"Language translators"},"children":[{"data":{"text":"why we need translator"},"children":[{"data":{"text":"translate the language into another format"},"children":[]},{"data":{"text":"We need assembler translate assembly language in to machine code"},"children":[]}]},{"data":{"text":"Assembler "},"children":[{"data":{"text":"An assembler is a program that translates an assembly code program into machine code."},"children":[]},{"data":{"text":" The CPU will not be able to execute assembly level program directly."},"children":[]},{"data":{"text":"So assemble program translates mnemonic in each instruction into its equivalent machine code by looking at lookup table. "},"children":[]},{"data":{"text":" The second pass of assembler"},"children":[{"data":{"text":"A 'two-pass' assembler is not an essential requirement but it does clearly differentiate between the two stages that are required in translation."},"children":[]},{"data":{"text":" first pass"},"children":[{"data":{"text":" removal of comments"},"children":[]},{"data":{"text":" creation of a symbol table containing the binary codes for symbolic names and labels "},"children":[]},{"data":{"text":" expansion of macros "},"children":[{"data":{"text":"A macro name is an abbreviation, which stands for some related lines of code. Macros are useful for the following purposes:"},"children":[{"data":{"text":"To simplify and reduce the amount of repetitive coding"},"children":[]},{"data":{"text":"To reduce errors caused by repetitive coding"},"children":[]},{"data":{"text":"To make an assembly program more readable."},"children":[]}]},{"data":{"text":"#define A #define B #define C (A*B)int var; var = C;"},"children":[]},{"data":{"text":"➡️var = (5*10)"},"children":[]}]},{"data":{"text":" identification of system calls and subroutines used."},"children":[]}]},{"data":{"text":"The second pass: "},"children":[{"data":{"text":" code optimization "},"children":[]},{"data":{"text":" generate machine code "},"children":[]}]}]}]},{"data":{"text":"Compiler "},"children":[{"data":{"text":"Compiler is a language translator that translates the whole high level language source code into object code, which can then be executed without the presence of a compiler."},"children":[{"data":{"text":"PROCESS: Source code->object code (also called intermediate code)-> machine code"},"children":[]},{"data":{"text":"Machine independent机器独立性"},"children":[]},{"data":{"text":"The compiler translate source code to object code"},"children":[]},{"data":{"text":"The object code can be translated on different platforms"},"children":[]},{"data":{"text":"E.g. Java, C++, C"},"children":[]}]}]},{"data":{"text":"Interpreter "},"children":[{"data":{"text":"Interpreter is a language translator that translate source code into executable format each statement at a time. However, no object code is produced. So the program has to be interpreted each time it is to be run. "},"children":[]},{"data":{"text":"E.g. Python, PHP, JavaScript"},"children":[]}]},{"data":{"text":" Benefits and drawbacks of using either a compiler or interpreter "},"children":[{"data":{"text":"The object code can be saved on disk and run whenever required without the need to recompile. However, if an error is discovered in the program, the whole program has to be recompile. "},"children":[]},{"data":{"text":"The object code executes faster than interpreted code"},"children":[]},{"data":{"text":" The object code produced by a compiler can be distributed or executed without having to the compiler present. "},"children":[]},{"data":{"text":" The object code is more secure, as it can not be read without a great deal of "},"children":[]},{"data":{"text":" once compiled, it requires less main memory to run object code as there is no need of source code. Compiler and other tables created while translation, whereas while compilation more memory is required for source code, object code, complex compiler software and other intermediate tables. "},"children":[]},{"data":{"text":" compiler"},"children":[]}]},{"data":{"text":"Suitability of compiler/interpreter "},"children":[{"data":{"text":"Typically, a programmer might use an interpreter during program development. A program that is tested and ready for distribution would then be compiled and the saved object code would be distributed."},"children":[]}]},{"data":{"text":"Use of both compiler &  interpreter in program "},"children":[{"data":{"text":"In some of the programming language both interpreter and compiler can be partially used to translate and execute program."},"children":[]},{"data":{"text":"Java uses a compiler to translate java program into java bytecode"},"children":[]},{"data":{"text":"Java bytecode program are compiled then executed by an interpreter."},"children":[]}]}]}]},{"data":{"text":"第八章 数据安全","expandState":"collapse"},"children":[{"data":{"text":"terms"},"children":[{"data":{"text":"Data integrity: a requirement for data to be accurate and up to date "},"children":[]},{"data":{"text":"Data privacy: a requirement for data to be available only to authorized users which is about keeping data private rather than allowing it to be available in the public domain. "},"children":[]},{"data":{"text":"Data security: a requirement for data to be recoverable if lost or corrupted and it is a prerequisite for ensuring data integrity and data privacy. "},"children":[]},{"data":{"text":"Data protection law: a law that relates to data privacy which oblige organizations to ensure the privacy and the integrity of this data. "},"children":[]},{"data":{"text":"Explain the difference of data integrity and data security "},"children":[{"data":{"text":" integrity deals with validity of data/freedom from errors/data is reasonable"},"children":[]},{"data":{"text":" integrity deals with making sure data is not corrupted after, being transmitted "},"children":[]},{"data":{"text":" security protects data from illegal access/loss "},"children":[]},{"data":{"text":"security deals with protection of data"},"children":[]}]}]},{"data":{"text":"Security measures for protecting computer systems "},"children":[{"data":{"text":"硬件方法"},"children":[{"data":{"text":"Firewall"},"children":[]},{"data":{"text":"Gateway"},"children":[]},{"data":{"text":"避免丢失"},"children":[{"data":{"text":"Backup"},"children":[]},{"data":{"text":"Mirror"},"children":[]}]}]},{"data":{"text":"避免病毒"},"children":[{"data":{"text":"Checker"},"children":[]},{"data":{"text":"Defender"},"children":[]},{"data":{"text":"Anti-virus software"},"children":[]},{"data":{"text":"Do not download uncertain file"},"children":[]},{"data":{"text":"Do not open uncertain website"},"children":[]}]},{"data":{"text":"Privacy"},"children":[{"data":{"text":"Encrypt"},"children":[]},{"data":{"text":"Priviledge"},"children":[]},{"data":{"text":"Authentication"},"children":[{"data":{"text":"Face ID"},"children":[]},{"data":{"text":"Finger Print"},"children":[]}]},{"data":{"text":"Identification"},"children":[{"data":{"text":"User name"},"children":[]},{"data":{"text":"Password"},"children":[]}]}]}]},{"data":{"text":"确保传输前的正确性"},"children":[{"data":{"text":"validation (to ensure data is reasonable) examples include range checks, type checks, length checks,"},"children":[]},{"data":{"text":"verification: (checks if data input matches original/if transmitted data matches original) "},"children":[{"data":{"text":"can use double data entry or visual check/other methods such as parity checks "},"children":[]},{"data":{"text":"doesn’t check whether or not data is reasonable "},"children":[]}]},{"data":{},"children":[]}]},{"data":{"text":"传输过程中的正确性"},"children":[{"data":{"text":"Parity check:"},"children":[{"data":{"text":"Sender"},"children":[{"data":{"text":"Count each line, add extra bit (parity bit)"},"children":[]},{"data":{"text":"Let the total number of 1s in even/odd"},"children":[]},{"data":{"text":"Count each column, add parity byte"},"children":[]}]},{"data":{"text":"Recipient"},"children":[{"data":{"text":"Check each line"},"children":[]}]}]},{"data":{"text":"Check sum"},"children":[{"data":{"text":" adds up bytes in data being sent and sends check sum with the data "},"children":[]},{"data":{"text":" if not the same sum then the data has been corrupted during transmission "},"children":[]},{"data":{"text":" calculation is redone at receiver’s end "},"children":[]},{"data":{"text":"查不出"},"children":[{"data":{"text":"Some error within bytes"},"children":[]},{"data":{"text":"disorder"},"children":[]}]}]}]}]},{"data":{"text":"第九章 道德与所有权","expandState":"collapse"},"children":[{"data":{"text":"ACM/IEEE Software Engineering Code of Ethics"},"children":[{"data":{"text":""},"children":[]}]},{"data":{"text":"Professional code of conduct for a computer system developer"},"children":[{"data":{"text":"Becoming a member of a professional body or the employee of an organisation will require you to follow a code of conduct expected by the organisation."},"children":[]},{"data":{"text":"This may be summarised in a formal document which the individual must sign."},"children":[]},{"data":{"text":"E.g. An employer’s code of conduct would include:"},"children":[{"data":{"text":"individual responsibilities in the workplace"},"children":[]},{"data":{"text":"guidelines for the use of the Internet in the workplace"},"children":[]},{"data":{"text":"guidelines for the use of use of internal and external email"},"children":[]},{"data":{"text":"what is considered misuse of equipment and other resources"},"children":[]},{"data":{"text":"what is considered unacceptable behaviour"},"children":[]},{"data":{"text":"rules about the use of sensitive data"},"children":[]}]},{"data":{"text":"An employee who does not adhere to these guidelines could expect disciplinary action. Some behaviour and actions could be the subject of legal action."},"children":[]}]},{"data":{"text":"Legislation to protect ownership usage and copyright"},"children":[{"data":{"text":"软件开发人员有义务在开发其产品时考虑法律和法规方面的考虑。其中包括："},"children":[{"data":{"text":"Intellectual property rights and licenses"},"children":[]},{"data":{"text":"Consumer protection"},"children":[]},{"data":{"text":"Age ratings and classification"},"children":[]},{"data":{"text":"advertising"},"children":[]},{"data":{"text":"Data protection and privacy"},"children":[]}]},{"data":{"text":"相关法案包括"},"children":[{"data":{"text":"Copyright Law"},"children":[]},{"data":{"text":"Computer Misuse Act"},"children":[]},{"data":{"text":"The Data Protection Act"},"children":[]}]}]},{"data":{"text":"Software Licensing 软件许可"},"children":[{"data":{"text":"Free software Foundation (FSF)"},"children":[{"data":{"text":"Free to"},"children":[{"data":{"text":"Run the software"},"children":[]},{"data":{"text":"Copy the software"},"children":[]},{"data":{"text":"Distribute the software to other users"},"children":[]},{"data":{"text":"study the code and change and improve the software. The user is then encouraged to make their improvements available to other users. (This may be a condition of the license.)"},"children":[]}]}]},{"data":{"text":"Open Source Initiative"},"children":[{"data":{"text":"Open-source licenses grant the right to copy, modify and redistribute the source code. These licenses may also impose obligations. Modifications to the code that are distributed must be made available in source code form and author attribution must"},"children":[]},{"data":{"text":"Open source software is made available under a licence that allows you to make copies and pass them on to anyone. The software comes with the source code, which you can change to meet your needs."},"children":[]},{"data":{"text":"Advantages"},"children":[{"data":{"text":"Start-up cost of adopting the software are nil."},"children":[]},{"data":{"text":"There is no supplier lock-in"},"children":[]},{"data":{"text":"You have freedom to do what you want with the software"},"children":[]},{"data":{"text":"Open standards support and encourage collaborative development"},"children":[]},{"data":{"text":"Licensing for a large number of users of the software is simplified"},"children":[]}]},{"data":{"text":"Disadvantages"},"children":[{"data":{"text":"It may be difficult to get support"},"children":[]},{"data":{"text":"Some proprietary formats, such as Microsoft's. docx file format, are so widely used that other formats may be less acceptable for business"},"children":[]}]}]},{"data":{"text":"Shareware"},"children":[{"data":{"text":"Shareware is software that is distributed free on a trial basis with the understanding that the user may need to Day for it later: Some software developers offer a shareware version of their program with a built-in expiration date."},"children":[]},{"data":{"text":"Other shareware (sometimes called liteware )is offered with certain capabilities disabled as an enticement to buy the complete version of the program at a later date."},"children":[]},{"data":{"text":"共享软件是一种在试用的基础上免费分发的软件，用户可能需要以后付费。一些软件开发人员提供了一个带有内置到期日期的共享版本的程序。例如，30天后，用户将无法再访问该程序其他共享软件（有时称为“liteware”）将被禁用某些功能，以诱使用户在以后购买该程序的完整版本"},"children":[]}]},{"data":{"text":"Commercial Software"},"children":[{"data":{"text":"Proprietary software is made available to an individual user or business under an end-user licence agreement (EULA). EULAs are generally long and complex contracts. You effectively accept the conditions of the licence when the software is installed."},"children":[{"data":{"text":"Shrink-wrap licences are usually for one installation of the software. This is the most common type of licence for off-the-shelf software purchased either online or from a retail store."},"children":[]},{"data":{"text":"Some types of licence may require software activation. This allows the supplier to check that the software is installed on just one PC Re activation will be required if the software is installed on a different PC"},"children":[]},{"data":{"text":"Per-user licences are common where software may be in use by more than one user simultaneously. The licence is usually for a specified maximum number of users."},"children":[]},{"data":{"text":"Site licences are much less restrictive. They typically allow an unlimited number of users from the same organisation to use the software"},"children":[]}]},{"data":{"text":"优点：有用户支持"},"children":[]},{"data":{"text":"缺点：收费"},"children":[]}]}]}]},{"data":{"text":"第十章 数据库","expandState":"collapse"},"children":[{"data":{"text":"为什么使用数据库"},"children":[{"data":{"text":"data integrity"},"children":[{"data":{"text":"the file-based approach can lead to data integrity problems in an individual file, In the traditional file system ,there are always some error,wrong order,inconsistent data, duplication of some data. "},"children":[]}]},{"data":{"text":"data privacy"},"children":[]},{"data":{"text":"data redundancy"},"children":[{"data":{"text":"it can lead to data inconsistency because of errors in the original entry or errors in subsequent editing. This is a different cause of data lacking integrity. One of the primary aims of the database approach is the elimination of data redundancy. "},"children":[]}]},{"data":{"text":"data dependency concerns"},"children":[{"data":{"text":"The above account has focused on the problems associated with data storage in files . We now need to consider the problems that might occur when programs access the files. The other aspect of data dependency is that when file structures have been defined to suit specific programs they will not be suited to supporting new applications. "},"children":[]}]}]},{"data":{"text":"ANSI architecture"},"children":[{"data":{"text":""},"children":[{"data":{"text":"the external level(外模式) "},"children":[{"data":{"text":"Used for extracting and manipulating data"},"children":[]},{"data":{"text":"Defines which part of  the database is accessable"},"children":[]},{"data":{"text":"It contains a query processor"},"children":[]},{"data":{"text":"It provides an user interface"},"children":[]},{"data":{"text":"【term】view"},"children":[{"data":{"text":"View is the mapping of the concept, it can show part of the  concept"},"children":[]},{"data":{"text":"So, it can keep the data privacy"},"children":[]}]}]},{"data":{"text":"the conceptual level(概念模式) "},"children":[{"data":{"text":"The conceptual level describes the Database structure of the whole database for the community of users."},"children":[{"data":{"text":"Defines all database entities, their attributes, and their relationships"},"children":[]}]},{"data":{"text":"hides information about the physical storage structures and focuses on describing data types, entities, relationships, etc."},"children":[]},{"data":{"text":"Security and integrity information"},"children":[]},{"data":{"text":"Database Administrator(DBA) uses Data Description Language(DDL) to manage"},"children":[]}]},{"data":{"text":"the internal level(内模式) "},"children":[{"data":{"text":"The internal schema defines the physical storage structure of the database."},"children":[]},{"data":{"text":"It helps you to keeps information about the actual representation of the entire database. Like the actual storage of the data on the disk in the form of records"},"children":[]}]}]},{"data":{"text":"定义："},"children":[{"data":{"text":"Data management system (DBMS): software that controls access to data in a database "},"children":[]},{"data":{"text":"Database administrator (DBA): a person who uses the DBMS to customize the database to suit user and programmer requirements "},"children":[]}]}]},{"data":{"text":"Relational database基础"},"children":[{"data":{"text":"Table = relation = concept"},"children":[]},{"data":{"text":"Attribute = field = collumn","expandState":"expand"},"children":[{"data":{"text":"A different problem is a lack of data privacy and Data privacy would be properly handled by a database system."},"children":[]}]},{"data":{"text":"Record = tuple = row = entity"},"children":[]},{"data":{"text":"Primary key: Attribute or a collection of attribute that is used to uniquelly  identify a record. It is a special  case of primary key"},"children":[{"data":{"text":"unique"},"children":[]},{"data":{"text":"existing"},"children":[]}]},{"data":{"text":"Foreign Key: The atribute in a table links to the primary key in another table to  form a relation."},"children":[]},{"data":{"text":"Candidate Key: Any attribute or combination  of attributes that  can act as a  unique key"},"children":[]},{"data":{"text":"Secondary Key: is also called index, to accelerate the query  speed,  we can create an index  on some column."},"children":[]},{"data":{"text":"Referential integrity:"},"children":[{"data":{"text":"If we delete the primary key, we must delete their corresponding foreign key."},"children":[]},{"data":{"text":"If we update the primary key, we must update their corresponding foreign key."},"children":[]}]},{"data":{"text":"Data dictionary"},"children":[{"data":{"text":"A filed or table containing all the details of the database design."},"children":[]}]}]},{"data":{"text":"Entity-relationship (E-R) diagrams"},"children":[{"data":{"text":""},"children":[]},{"data":{"text":""},"children":[{"data":{"text":""},"children":[]}]},{"data":{"text":""},"children":[]},{"data":{"text":""},"children":[]},{"data":{"text":"Bridge Table"},"children":[{"data":{"text":"在两个表中间，用来补充缺少的信息"},"children":[]}]}]},{"data":{"text":"Normalisations"},"children":[{"data":{"text":"基础"},"children":[{"data":{"text":"First normal form (1NF) – entities do not contain repeated groups of attributes."},"children":[{"data":{"text":""},"children":[]}]},{"data":{"text":"Second normal form (2NF) – entities are in 1NF (前提) and any non-key attributes fully depend upon the primary key. There are no partial dependencies (on the primary key)."},"children":[{"data":{"text":""},"children":[]}]},{"data":{"text":"Third normal form (3NF) – entities are in 2NF (前提) and all non-key attributes are independent. The table contains no non-key dependencies."},"children":[{"data":{"text":"这回一点儿主键的面子都不给，完全不搭理，自己互相依赖上了。"},"children":[]}]}]},{"data":{"text":"步骤"},"children":[{"data":{"text":" un-normalised School database"},"children":[]},{"data":{"text":"First normal form (1NF)"},"children":[{"data":{"text":""},"children":[]},{"data":{"text":""},"children":[]},{"data":{"text":""},"children":[]},{"data":{"text":"The primary key for the STUDENTSUBJECT table is a composite key formed from the two attributes StudentID and SubjectName;"},"children":[]},{"data":{"text":"the attribute StudentID is also a foreign key that links to the STUDENT table."},"children":[]}]},{"data":{"text":"Second normal form (2NF)"},"children":[{"data":{"text":""},"children":[]},{"data":{"text":""},"children":[]},{"data":{"text":""},"children":[]}]},{"data":{"text":"Third normal form (3NF)"},"children":[{"data":{"text":"consider"},"children":[{"data":{"text":"Teacher names might not be unique; therefore, it is better to use the licence number as a primary key."},"children":[]},{"data":{"text":"Teachers can be both class teachers and subject teachers; these need to be combined in one table."},"children":[]}]},{"data":{"text":"拆！"},"children":[{"data":{"text":""},"children":[]},{"data":{"text":""},"children":[]},{"data":{"text":""},"children":[]},{"data":{"text":""},"children":[]},{"data":{"text":""},"children":[]},{"data":{"text":""},"children":[]}]}]}]}]},{"data":{"text":"Data definition language (DDL) and data manipulation language (DML)"},"children":[{"data":{"text":"Data Definition Language (DDL) - A language used to create, modify and remove the data structures that form a database"},"children":[{"data":{"text":""},"children":[]},{"data":{"text":""},"children":[]}]},{"data":{"text":"Data manipulation language (DML) - A language used to add, modify, delete and retrieve the data stored in a relational database"},"children":[{"data":{"text":""},"children":[]},{"data":{"text":""},"children":[]}]}]}]},{"data":{"text":"第六章 汇编语言","expandState":"collapse"},"children":[{"data":{"text":"Machine code"},"children":[{"data":{"text":"For a particular processor, the following components are defined for an individual machine code instruction"},"children":[]},{"data":{"text":"The only language that the CPU recognize is machine code"},"children":[{"data":{"text":" the total number of bits or bytes for the whole instruction"},"children":[]},{"data":{"text":" the number of bits that define the opcode "},"children":[]},{"data":{"text":" the number of operands that are defined in the remaining bits"},"children":[]},{"data":{"text":" whether the opcode occupies the most significant or the least significant bits. "},"children":[]}]},{"data":{"text":"Machine code instruction: a binary code with a defined number of bits that comprises an opcode (决定指令干什么) and, most often, one operand (决定从哪取数据)"},"children":[{"data":{"text":"opcode 操作码"},"children":[]},{"data":{"text":"operand 操作数"},"children":[]}]},{"data":{"text":"The number of bits needed for the opcode depends on the number of different opcodes in the instruction set for the processor. "},"children":[{"data":{"text":"instruction set指令集架构"},"children":[]}]},{"data":{"text":"例子"},"children":[{"data":{"text":"(以上述给出的机器码为例):一条机器指令有两部分组成,第一部分是操作码(opcode),第二部分是操作数(operand),二者共同决定了机器指令的长度,其中操作数是可以寻址的地址空间,他的长度等于MDR的位宽,而操作码通常有三部分组成,第一个是操作(operation),他由计算中不同的操作类型决定,比如如果某个计算机有8种不同的操作(加、减、乘、除、取模、取反、左移位、右移位),那么需要操作的位数是3位,因为每一位有两种取值(0、1),所以三位一共有2*2*2=8种不同的取值,代表这八种不同的操作,分别是000,001,010,011,100,101,110,111;寻址方式(address mode) 是寻址方式,在后续的小节中具体讲述;寄存器地址(register address)是在寄存器寻址时,指示不同的寄存器。 "},"children":[]},{"data":{"text":"CU <-- [CIR(23:16)] "},"children":[{"data":{"text":"在取值-执行周期中,在取值阶段的最后一条操作是把指令的操作码放入到CU中进行解码,那么从字面中,我们可以知道,解码过程其实是把操作码(opcode)放到CU中进行解析,所以只有opcode部分需要放到CU中,按照指令的格式,只要把16到23位放到CU中就可以了(上例中)。但是需要说明的是其中的“[ ]”指的是获取当前的内容,例如 [CIR(23:16)]获取的是CIR的16到23位的值。 "},"children":[]}]}]}]},{"data":{"text":"Assembly language"},"children":[{"data":{"text":"基础"},"children":[{"data":{"text":"Machine code has these drawbacks:"},"children":[{"data":{"text":"It is difficult to write and understand "},"children":[]},{"data":{"text":"It is difficult to maintenance "},"children":[]},{"data":{"text":" It is difficult to transplant to other machine "},"children":[]}]},{"data":{"text":"for each machine code instruction there is an equivalent assembly language instruction which comprises"},"children":[{"data":{"text":"a mnemonic (a symbolic abbreviation) for the opcode"},"children":[]},{"data":{"text":"a character representation for the operand"},"children":[]}]},{"data":{"text":"If a program has been written in assembly language it has to be translated into machine code before it can be executed by the processor."},"children":[{"data":{"text":"The translation program is called an 'assembler'."},"children":[]}]}]},{"data":{"text":"The feature of the assembly language: "},"children":[{"data":{"text":"Directives and system calls are instructions to the assembler as to how it should construct the final executable machine code. They can involve directing how memory should be used or defining files or procedures that will be used. They do not have to"},"children":[]},{"data":{"text":"A macro or a subroutine contains a sequence of instructions that is to be used more than once in a program."},"children":[]},{"data":{"text":"Assist the programmer in writing the program . Of these, comments are removed by the assembler and symbolic names and labels require a conversion to binary code by the assembler."},"children":[]},{"data":{"text":"comments "},"children":[]},{"data":{"text":"symbolic names for constants "},"children":[]},{"data":{"text":"labels for addresses"},"children":[]},{"data":{"text":"macros"},"children":[]},{"data":{"text":"subroutines"},"children":[]},{"data":{"text":"directives"},"children":[]}]},{"data":{"text":"addressing  mode"},"children":[{"data":{"text":"Immediate"},"children":[{"data":{"text":"The value to be used in the instruction "},"children":[]}]},{"data":{"text":"Direct addressing"},"children":[{"data":{"text":"An address which holds the value to be used in the instruction "},"children":[]}]},{"data":{"text":"Indirect addressing"},"children":[{"data":{"text":"An address which holds the address which holds the value to be used in the instruction "},"children":[]}]},{"data":{"text":"Indexed addressing"},"children":[{"data":{"text":"An address to which must be added what is currently in the index register (IX) to get the address which holds the value in the instruction "},"children":[]}]},{"data":{"text":"relative addressing"},"children":[{"data":{"text":"the operand is the offset from the current address where the value to be used is stored. "},"children":[{"data":{"text":"An offset is a difference between two indices, usually memory locations or array indices."},"children":[]},{"data":{"text":"Relative addressing calculates the address to be used from some base address when the program is loaded into memory. The two base points which could be used are"},"children":[{"data":{"text":"the address of the first program instruction"},"children":[]},{"data":{"text":"the address of the current instruction"},"children":[]}]},{"data":{"text":"With the first method, the instruction JMP  +8 would mean 'jump to the address eight locations from the start address of the program’."},"children":[]},{"data":{"text":"With the second method, the instruction JMP -9 would mean jump to the address nine locations before the address where this current instruction is loaded’."},"children":[]}]},{"data":{"text":"因此，内存物理地址=base address + relative address"},"children":[]}]},{"data":{"text":"Symbolic Addressing"},"children":[{"data":{"text":"Simply, we use symbols to represent addresses. These will be shown in an additional label\"column in the source code"},"children":[]},{"data":{"text":""},"children":[]},{"data":{"text":"The programmer has used four labels: StartProg EndProg, Here and Value"},"children":[]}]}]},{"data":{"text":"Assembly language instructions"},"children":[{"data":{"text":""},"children":[]}]},{"data":{"text":"Macros 宏"},"children":[{"data":{"text":"A group of instructions may need to be executed several times within the same program. The statements would be written once and the block of statements given an identifier name."},"children":[]},{"data":{"text":"The statements can then be called using the name whenever they need to be executed"},"children":[]},{"data":{"text":"语法-定义宏"},"children":[]},{"data":{"text":"语法-调用宏"},"children":[]}]},{"data":{"text":"Assembler Directives"},"children":[{"data":{"text":"The information that assembler needed to be able to translate the source code"},"children":[]}]},{"data":{"text":"这部分考试时会用到ASCII相关的知识，参见 Data representation"},"children":[]}]}]},{"data":{"text":"第五章 处理器","expandState":"collapse"},"children":[{"data":{"text":"The features of Von Neumann Architecture"},"children":[{"data":{"text":"There is a processor, a central processing unit. "},"children":[]},{"data":{"text":"The processor has direct access to a memory."},"children":[]},{"data":{"text":"The processor executes instructions sequentially."},"children":[]},{"data":{"text":"program must be resident in (main) memory to be executed"},"children":[]},{"data":{"text":"program consists of a sequence of instructions"},"children":[{"data":{"text":"which occupy a (contiguous) block of main memory"},"children":[]}]}]},{"data":{"text":"Using these four components"},"children":[{"data":{"text":"Input/Output (I/O) Devices"},"children":[{"data":{"text":"hardware devices that are responsible for getting data from the computer to the user or from the user to the computer."},"children":[{"data":{"text":"Data going from the user to the computer is called \"input.\" "},"children":[{"data":{"text":"mouse"},"children":[]},{"data":{"text":"keyboard"},"children":[]}]},{"data":{"text":"Output devices are used to transmit data from the computer's memory to the user."},"children":[{"data":{"text":"monitor"},"children":[]},{"data":{"text":"printer"},"children":[]}]}]}]},{"data":{"text":"Memory"},"children":[{"data":{"text":"Memory unit in the Von Neumann model is the main memory"},"children":[]},{"data":{"text":"Main memory is used by the computer for storing a program and its data  while  the program is running"},"children":[]}]},{"data":{"text":" Control Unit"},"children":[{"data":{"text":"The control unit controls the sequencing and timing of all operations"},"children":[]},{"data":{"text":"It contains a \"clock,\" that is actually a quartz crystal that vibrates million times per second which generates the timing signals to synchronize  events in the  fetch–(decode)–execute cycle."},"children":[]},{"data":{"text":"Functions of CU"},"children":[{"data":{"text":"Interprets and carries out instruction of program"},"children":[]},{"data":{"text":"Selects program statements from memory"},"children":[]},{"data":{"text":"Moves these instructions to instruction registers"},"children":[]},{"data":{"text":"Carries out instructions "},"children":[]},{"data":{"text":"Directs flow of data between components of CPU and to and from other devices."},"children":[]}]}]},{"data":{"text":"Arithmetic Logic Unit (ALU)"},"children":[{"data":{"text":"Arithmetic unit perform arithmetical operations"},"children":[{"data":{"text":", -, *, and /"},"children":[]}]},{"data":{"text":"logical unit are to compare two quantities"},"children":[]},{"data":{"text":"do logical (true/false)  operations"},"children":[]},{"data":{"text":"Functions of ALU"},"children":[{"data":{"text":"arithmetic unit carries out arithmetic like addition, division."},"children":[]},{"data":{"text":"logic unit enables the processor to "},"children":[{"data":{"text":"make comparison like =, <, >"},"children":[]},{"data":{"text":"logical decisions like AND, OR, NOT. "},"children":[]}]},{"data":{"text":"carries out communication with peripheral devices."},"children":[]},{"data":{"text":"carries out bit shifting operation. "},"children":[]}]}]}]},{"data":{"text":" von Neumann computer will execute a series of instructions, called a program,"},"children":[{"data":{"text":"This is called the \"stored program concept\""},"children":[]}]},{"data":{"text":"Other smaller parts composed and connected those components"},"children":[{"data":{"text":"Register"},"children":[{"data":{"text":"Registers are Immediate Access Store (IAS) located on the CPU, and used temporarily for storing data. Because the registers are close to the ALU, they are made out of fast memory, efficiently speeding up calculations. "},"children":[]},{"data":{"text":"Special-purpose registers"},"children":[{"data":{"text":"Program Counter (PC) "},"children":[{"data":{"text":"Stores the address of where the next instruction is to be read from"},"children":[]}]},{"data":{"text":"Memory Address Register (MAR)"},"children":[{"data":{"text":"Stores the address of a memory location which is register about to have a value read from or written to."},"children":[]}]},{"data":{"text":"Memory Data Register (MDR) "},"children":[{"data":{"text":"Stores data that has just been read from memory or is just about to be written to memory"},"children":[]}]},{"data":{"text":"Current Instruction register (CIR)"},"children":[{"data":{"text":"Stores the current instruction while it is being decoded and executed"},"children":[]}]},{"data":{"text":"Indexed register(IX)"},"children":[{"data":{"text":"only used for indexed addressing"},"children":[]}]},{"data":{"text":"Status register(SR)"},"children":[{"data":{"text":"Contains individual bits that are either set or cleared"},"children":[]},{"data":{"text":"The SR is used when an instruction requires arithmetic or logic processing."},"children":[]},{"data":{"text":"Each individual bit in the SR operates as a flag."},"children":[]},{"data":{"text":"The bit is set to 1 if a condition is detected."},"children":[]},{"data":{"text":"three flags"},"children":[{"data":{"text":"The carry flag, identified as C, is set to 1 if there is a carry. "},"children":[]},{"data":{"text":"The negative flag, identified as N, is set to 1 if a result is negative. "},"children":[]},{"data":{"text":"The overflow flag, identified as V, is set to 1 if overflow is detected. "},"children":[]}]}]}]},{"data":{"text":"General purpose register"},"children":[{"data":{"text":"Accumulator(ACC)"},"children":[{"data":{"text":"a general-purpose register that stores a value before and after the execution of an instruction by the ALU."},"children":[]}]}]}]},{"data":{"text":"system bus"},"children":[{"data":{"text":" a wire transmits a single bit"},"children":[{"data":{"text":" 8-bits bus can transfer 8 bits (1 byte) at a time"},"children":[]},{"data":{"text":"16-bits bus   can transfer 16 bits (2 bytes) and so on.  "},"children":[]}]},{"data":{"text":"Three types of bus"},"children":[{"data":{"text":"Data Bus"},"children":[{"data":{"text":"transmit data between CPU, memory and peripherals"},"children":[]},{"data":{"text":"bidirectional bus"},"children":[]}]},{"data":{"text":"Address Bus"},"children":[{"data":{"text":"connecting the CPU with main memory "},"children":[]},{"data":{"text":"transfer address of memory or input/output location"},"children":[]},{"data":{"text":"identify particular locations (address) in main memory where data is stored"},"children":[]},{"data":{"text":"unidirectional bus"},"children":[]}]},{"data":{"text":"Control Bus"},"children":[{"data":{"text":"transmit the control signals (instructions) generated by Control Unit to the relevant component of the computer"},"children":[{"data":{"text":"e.g. read/write/fetch/ ... "},"children":[]}]}]}]},{"data":{"text":"Width of the data bus"},"children":[{"data":{"text":"the width of the data bus determines the number of bits that can be simultaneously transferred"},"children":[]},{"data":{"text":"increasing the width of the data bus increases the number of bits/amount of data that can be moved at one time "},"children":[{"data":{"text":"hence improving processing speed as fewer transfers are needed"},"children":[]}]}]}]},{"data":{"text":"Clock speed"},"children":[{"data":{"text":"determines the number of cycles the CPU can execute per second"},"children":[]},{"data":{"text":"increasing clock speed increases the number of operations/number of fetch-execute cycles that can be carried out per unit of time"},"children":[]},{"data":{"text":"however, there is a limit on clock speed because the heat generated by higher clock speeds cannot be removed fast enough"},"children":[]}]},{"data":{"text":"The universal serial bus (USB)"},"children":[{"data":{"text":"Features"},"children":[{"data":{"text":"devices automatically detected and configured when first attached/plug and play"},"children":[]},{"data":{"text":"it is nearly impossible to wrongly connect a device"},"children":[]},{"data":{"text":"USB has become an industrial standard"},"children":[]},{"data":{"text":"supported by many operating systems"},"children":[]},{"data":{"text":"USB 3.0 allows full duplex data transfer"},"children":[]},{"data":{"text":"later versions are backwards compatible with earlier USB systems"},"children":[]},{"data":{"text":"allows power to be drawn to charge portable devices"},"children":[]}]}]}]},{"data":{"text":"Fetch-Execute Cycle"},"children":[{"data":{"text":""},"children":[]},{"data":{"text":"If we assume that a program is already running then the program counter already holds the address of an instruction. In the fetch stage, the following steps happen: "},"children":[{"data":{"text":" This address in the program counter is transferred within the CPU to the MAR. "},"children":[]},{"data":{"text":"the instruction held in the address pointed to by the MAR is fetched into the MDR "},"children":[]},{"data":{"text":"The instruction stored in the MDR is transferred within the CPU to the CIR. "},"children":[]},{"data":{"text":"the address stored in the program counter is incremented. "},"children":[]}]},{"data":{"text":"Register transfer notation"},"children":[{"data":{"text":""},"children":[{"data":{"text":"This address in the program counter is transferred within the CPU to the MAR. "},"children":[]},{"data":{"text":"During the next clock cycle two things happen simultaneously"},"children":[{"data":{"text":"the instruction held in the address pointed to by the MAR is fetched into the MDR"},"children":[]},{"data":{"text":"the address stored in the program counter is incremented. "},"children":[]}]},{"data":{"text":"The instruction stored in the MDR is transferred within the CPU to the CIR."},"children":[]}]}]}]},{"data":{"text":"Interrupt handling"},"children":[{"data":{"text":"definition of interrupt"},"children":[{"data":{"text":" signal from a device/program that it requires attention from the processor. "},"children":[]}]},{"data":{"text":"reason causes the interrupt"},"children":[]},{"data":{"text":"a fatal error in a program "},"children":[]},{"data":{"text":"a hardware fault "},"children":[]},{"data":{"text":"a need for I/ O processing to begin "},"children":[]},{"data":{"text":"user interaction   "},"children":[]},{"data":{"text":"a timer signal. "},"children":[]},{"data":{"text":"when to handle the interrupt"},"children":[{"data":{"text":"at the end of the fetch-execute cycle check for interrupt"},"children":[]}]},{"data":{"text":"how to handle the interrupt"},"children":[{"data":{"text":"at a point during the fetch-execute cycle check for interrupt "},"children":[]},{"data":{"text":"if an interrupt flag is set/ bit set in interrupt register, The first step in handling the interrupt is to store the contents of the program counter and any other registers somewhere safe in memory. "},"children":[]},{"data":{"text":"Following this, the appropriate interrupt handler or interrupt service routine (ISR) program is initiated by loading its start address into the program counter. "},"children":[]}]},{"data":{"text":"The process of interrupt"},"children":[{"data":{"text":"At the end of the cycle for the current instruction the processor checks if there is an interrupt. "},"children":[]},{"data":{"text":"If the interrupt flag is set, the register contents are saved,  "},"children":[]},{"data":{"text":"the address of the Interrupt Service Routine (ISR) is loaded to the Program Counter (PC)  "},"children":[]},{"data":{"text":"The interrupted program(ISR) continues its execution"},"children":[]},{"data":{"text":"when the ISR completes, the processor restores the register contents"},"children":[]}]}]},{"data":{"text":""},"children":[]}]},{"data":{"text":"第四章 逻辑电路","expandState":"collapse"},"children":[{"data":{"text":"和IG考的没啥区别，就是稍微复杂一点。没事儿，到A2的逻辑电路题会让你感到暴击哈哈哈哈哈哈"},"children":[]},{"data":{"text":""},"children":[]},{"data":{"text":""},"children":[]},{"data":{"text":""},"children":[]}]},{"data":{"text":"第三章 硬件","expandState":"collapse"},"children":[{"data":{"text":"定义"},"children":[{"data":{"text":"Input"},"children":[{"data":{"text":"Input device are the means whereby computers can accept data or instructions from environment. "},"children":[]}]},{"data":{"text":"Output"},"children":[{"data":{"text":"Output device are the means to produce information or processed result to the environment."},"children":[]}]},{"data":{"text":"Storage devices"},"children":[{"data":{"text":"Storage devices are the means to store data and programs permanently or temporarily. "},"children":[]},{"data":{"text":"main memory is primary memory that can be directly accessed by CPU."},"children":[]}]}]},{"data":{"text":"Input and output device:"},"children":[{"data":{"text":"Input"},"children":[{"data":{"text":" keyboard"},"children":[{"data":{"text":"工作原理等"},"children":[{"data":{"text":"It is input device with different types of keys. When any key is pressed, broken circuit below pressed key is completed and unique binary coded signal is generated and computer recognizes respective character in its character set."},"children":[]},{"data":{"text":" the value input of keyboard is ASCII"},"children":[]},{"data":{"text":" the is a rom to store the relation of ASCII and the key position"},"children":[]},{"data":{"text":" the input of keyboard is interruption "},"children":[]}]},{"data":{"text":"组成"},"children":[{"data":{"text":"Plunger"},"children":[]},{"data":{"text":"Circuit"},"children":[]},{"data":{"text":"ROM"},"children":[]}]}]},{"data":{"text":"scanner "},"children":[{"data":{"text":"It is the input device that converts a document into a series of pixels. Basic principle of scanner is to capture the image."},"children":[{"data":{"text":"1 The scanner shines a light beam onto the document."},"children":[]},{"data":{"text":"2 The scanner detects the level of reflected light from set positions on the document."},"children":[]},{"data":{"text":"3 The light intensity is converted by software for each pixel position into a combination of Os and Is by sensing different intensities of light and dark from the document"},"children":[]}]}]},{"data":{"text":" Mouse"},"children":[{"data":{"text":"Trackball mouse"},"children":[{"data":{"text":" pointing device consisting of a ball on the top of plastic case that moves a computer cursor around on the screen."},"children":[]},{"data":{"text":" Ball is held by a socket consisting sensors to detect a rotation of the ball about two perpendicular axes"},"children":[]}]},{"data":{"text":"Laser mouse"},"children":[{"data":{"text":" it emits laser beam focused on the surface beneath the mouse by a special type of lens."},"children":[]},{"data":{"text":" The reflected light falls back to the light sensor integrated with camera."},"children":[]},{"data":{"text":"The camera take image of the surface with a frequency range of 1500 to 6000 images per second."},"children":[]},{"data":{"text":" These images are send to digital signal processor, which detects patterns in images & calculates how far the mouse has moved & sends the corresponding coordinates to computer."},"children":[]},{"data":{"text":"How the laser mouse operates? "},"children":[{"data":{"text":"laser/light shines onto a surface "},"children":[]},{"data":{"text":"through a (polished) ring at the base "},"children":[]},{"data":{"text":"the light is reflected from the surface through the ring "},"children":[]},{"data":{"text":"sensor detects reflected light "},"children":[]},{"data":{"text":"capturing details/photograph of surface (under the ring) "},"children":[]},{"data":{"text":"at about 1500 times per second "},"children":[]},{"data":{"text":"as the mouse moves the sensor detects changes in the surface detail/photograph "},"children":[]},{"data":{"text":"which are translated into movement (change of x and y co-ordinates) "},"children":[]},{"data":{"text":"the computer/software updates the position of the cursor on the screen "},"children":[]}]}]}]},{"data":{"text":"Touch Screen"},"children":[{"data":{"text":"Resistive Technology"},"children":[{"data":{"text":"The construction of the screen consists of a glass panel covered with:"},"children":[{"data":{"text":"a conductive layer"},"children":[]},{"data":{"text":"a resistive metallic layer - these two layers are held apart by spacers"},"children":[]},{"data":{"text":"a scratch-resistant layer placed on top of the whole setup"},"children":[]}]},{"data":{"text":"When the device is switched on"},"children":[{"data":{"text":"An electric current runs through the two layers"},"children":[]},{"data":{"text":"When the user touches the screen, the two layers make contact at that exact location"},"children":[]},{"data":{"text":"The change in the electrical field is noted and the coordinates of the point of contact are calculated by sottware"},"children":[]},{"data":{"text":"Once the coordinates are known, driver software translates the touch into data that the operating system can understand"},"children":[]}]}]},{"data":{"text":"Capacitive technology"},"children":[{"data":{"text":"In physics, a capacitor is a device which stores electrical charge. Your skin is made up of millions of atoms which attract electrical charge"},"children":[]},{"data":{"text":"The Construction of the screen consists of:"},"children":[{"data":{"text":"The glass panel"},"children":[]},{"data":{"text":"A layer that stores electrical charge placed on the glass panel"},"children":[]},{"data":{"text":"When a user touches the panel, some of the charge is attracted to and transferred to the user"},"children":[]},{"data":{"text":"This charge on the capacitive layer is less - causing a drop in voltage"},"children":[]},{"data":{"text":"This decrease in voltage is measured by circuits located at each corner of the screen."},"children":[]},{"data":{"text":"Software calculates, from the relative differences in charge at each corner, the exact coordinates of the touch"},"children":[]},{"data":{"text":"The data is sent to the touch screen driver software."},"children":[]}]}]}]},{"data":{"text":"Sensors","expandState":"expand"},"children":[{"data":{"text":"A sensor is an input device deigned to sense some physical characteristic of its surroundings, such as:","expandState":"expand"},"children":[{"data":{"text":"Pressure sensor"},"children":[]},{"data":{"text":"Temperature sensor"},"children":[]},{"data":{"text":"Wind speed or flow sensor"},"children":[]},{"data":{"text":"Light intensity"},"children":[]}]},{"data":{"text":"intrusion detection"},"children":[{"data":{"text":"红外"},"children":[]},{"data":{"text":"压力"},"children":[]},{"data":{"text":"温度"},"children":[]}]}]}]},{"data":{"text":"Output"},"children":[{"data":{"text":" Printer"},"children":[{"data":{"text":"原理等"},"children":[]},{"data":{"text":"种类"},"children":[{"data":{"text":"Inkjet printer"},"children":[{"data":{"text":"It produce output by spraying colored inks onto the paper."},"children":[]},{"data":{"text":" The print-head consists of a number of ink cartridges-black, cyan, magenta & yellow, which spray ink onto the page to produce a vast range of color combinations."},"children":[]},{"data":{"text":"The print-head travels across the page a line at a time."},"children":[]},{"data":{"text":" The ink reservoir in heated & this vaporizes droplets of ink, which then forces a small ink blob onto the paper. "},"children":[]}]},{"data":{"text":"Laser printer"},"children":[{"data":{"text":" it has drum that is mostly positively charged."},"children":[]},{"data":{"text":"The controller in printer manipulates a small laser to write on the drum with negative charge, creating a image."},"children":[]},{"data":{"text":" Drum is rolled through toner, which is positively charged so it will cling to areas of negative charge on drum."},"children":[]},{"data":{"text":" Image will transfer to paper then fed through a fuse."},"children":[]},{"data":{"text":""},"children":[]}]}]}]},{"data":{"text":"Speakers"},"children":[{"data":{"text":"A speaker is an output device. Sound is an electro magnetic wave. We hear different sounds due to the changes in the frequency and amplitude of these waves."},"children":[]},{"data":{"text":"A loudspeaker (see figure below) takes an electrical signal and translates it into physical vibrations to create sound waves. The speaker is carrying out the exact reversal of what is done by a microphone. The task of a microphone is to receive as in"},"children":[]},{"data":{"text":""},"children":[]}]},{"data":{"text":"Actuators"},"children":[{"data":{"text":"An actuator is a motor that controls a piece of mechanical equipment. It is operated by a source of energy, typically:"},"children":[{"data":{"text":"Electric current"},"children":[]},{"data":{"text":"Hydraulic (fluid) pressure"},"children":[]},{"data":{"text":"Pneumatic (air) pressure"},"children":[]}]},{"data":{"text":"The actuator converts the energy into motion of some component"},"children":[]},{"data":{"text":"The energy which drives the actuator will originate as the output from computer software which is receiving data from one or more sensors"},"children":[]}]}]}]},{"data":{"text":"存储设备"},"children":[{"data":{"text":""},"children":[]},{"data":{"text":"Primary memory can be directly accessed by CPU. Primary memory are used to store programs and data that are currently being processed or ready to be processed. It also store some parts of operating system required while computer is switched on.     Secondary memory cannot the directly accessed by CPU. Secondary memory stores long term programs and data. It is also used to carry program and data. "},"children":[{"data":{"text":"Primary Memory"},"children":[{"data":{"text":"main memory"},"children":[]},{"data":{"text":"internal memory"},"children":[]}]},{"data":{"text":"Second Memory"},"children":[{"data":{"text":"Secondary memory consists of all permanent or persistent storage devices, such as read-only memory (ROM), flash drives, hard disk drives (HDD), magnetic tapes and other types of internal/external storage media."},"children":[]}]}]},{"data":{"text":"RAM and ROM"},"children":[{"data":{"text":" difference of RAM and ROM "},"children":[{"data":{"text":"RAM"},"children":[{"data":{"text":"RAM is volatile(易失性) type of primary memory in which data gets erased once power is turned off. "},"children":[]},{"data":{"text":"The data can be accessed (read or write) randomly."},"children":[]},{"data":{"text":"store program and data that are currently being processed or ready to be processed. "},"children":[]}]},{"data":{"text":"ROM"},"children":[{"data":{"text":"ROM is non-volatile type of primary memory in which data is permanent. "},"children":[]},{"data":{"text":"Program and data in ROM cannot be modified."},"children":[]},{"data":{"text":"Like boot strap loader is stored in ROM chip. "},"children":[{"data":{"text":"BIOS"},"children":[]}]}]}]},{"data":{"text":"the difference of SRAM and DRAM"},"children":[{"data":{"text":"SRAM consists of flip-flop circuit consisting of few transistor that can store a bit."},"children":[{"data":{"text":" DRAM each circuit consists of capacitor and a transistor, in which a bit is stored in capacitor in form of use. "},"children":[]}]},{"data":{"text":"SRAM need not be refreshed"},"children":[{"data":{"text":"DRAM need to be refresh frequently as fuse in capacitor may leak"},"children":[]}]},{"data":{"text":"Data accesses of DRAM is slower than SRAM"},"children":[{"data":{"text":" DRAM need to be refreshed and while refreshing data cannot be accessed. "},"children":[]}]},{"data":{"text":"SRAM is suitable where data access rate is more concern compared to cost and data storage capacity."},"children":[]},{"data":{"text":"SRAM usually is used for cache"},"children":[{"data":{"text":"DRAM is usually used for main memory"},"children":[]}]}]},{"data":{"text":"ROM的种类"},"children":[{"data":{"text":"MROM"},"children":[{"data":{"text":"Mask ROM"},"children":[]},{"data":{"text":"内容一经写入，任何人都无法改变"},"children":[]}]},{"data":{"text":"PROM"},"children":[{"data":{"text":"PROM指的是“可编程只读存储器”既Programmable Red-Only Memory。PROM在出厂时，存储的内容全为1，用户可以根据需要将其中的某些单元写入数据0，以实现对其“编程”的目的。如果我们想改写某些单元，则可以给这些单元通以足够大的电流"},"children":[]}]},{"data":{"text":"EPROM"},"children":[{"data":{"text":"EPROM指的是“可擦写可编程只读存储器”，即Erasable Programmable Read-Only Memory。 它的特点是具有可擦除功能，擦除后即可进行再编程，但是缺点是擦除需要使用紫外线照射一定的时间。"},"children":[]}]},{"data":{"text":"EEPROM"},"children":[{"data":{"text":"EEPROM指的是“电可擦除可编程只读存储器”，即Electrically Erasable Programmable Read-Only Memory。它的最大优点是可直接用电信号擦除，也可用电信号写入。鉴于EPROM操作的不便，后来出的主板上的BIOS ROM芯片大部分都采用EEPROM。EEPROM的擦除不需要借助于其它设备，它是以电子信号来修改其内容的，而且是以Byte为最小修改单位，不必将资料全部洗掉才能写入，彻底摆脱了EPROM Eraser和编程器的束缚。"},"children":[]}]},{"data":{"text":"Flash Disk"},"children":[{"data":{"text":"Flash ROMFlash ROM指的是“闪存”，所谓“闪存”，它也是一种非易失性的内存，属于EEPROM的改进产品，它的最大特点是必须按块(Block或Sector)擦除(每个区块的大小不定，不同厂家的产品有不同的规格)， 而EEPROM则可以一次只擦除一个字节(Byte)。Flash ROM 是利用浮置栅上的电容存储电荷来保存信息，因为浮置栅不会漏电，所以断电后信息仍然可以保存。Flash ROM的存储容量普遍大于EEPRO"},"children":[]}]}]},{"data":{"text":"内存"},"children":[]}]},{"data":{"text":"hard disk drive"},"children":[{"data":{"text":"基本运作方式"},"children":[{"data":{"text":"It is a secondary storage non-volatile memory."},"children":[]},{"data":{"text":"consists of one or more than "},"children":[]},{"data":{"text":"Disk is logically divided into tracks and sectors."},"children":[]},{"data":{"text":"Disk controller makes actuator heads, on both side of the disk, to move around the disk to point sector and read data from there in form of binary bits. "},"children":[]},{"data":{"text":"While reading data, sectors in which parts of particular file are stored are located from file allocation table."},"children":[]}]},{"data":{"text":"补充"},"children":[{"data":{"text":"读写的时候三个（或者多个）磁盘可以同时读写  提升速度"},"children":[]},{"data":{"text":"三个时间"},"children":[{"data":{"text":"Seek time：找Tracker（磁道）"},"children":[]},{"data":{"text":"Wait time：找Sector（扇区）"},"children":[]},{"data":{"text":"Read/write time 读写时间"},"children":[]},{"data":{"text":"（Data transfer time)"},"children":[]}]}]},{"data":{"text":""},"children":[{"data":{"text":"Read/write head 读写头 只能沿半径方向移动"},"children":[]},{"data":{"text":"Track 磁道"},"children":[]},{"data":{"text":"Sector 扇区"},"children":[]},{"data":{"text":"Cylinder 柱面 不同磁盘的相同磁道"},"children":[]}]}]},{"data":{"text":"SSD"},"children":[{"data":{"text":"SSD has no moving parts"},"children":[]},{"data":{"text":"SSD uses NAND circuit"},"children":[]},{"data":{"text":"SSD has less latancy"},"children":[]},{"data":{"text":"SSD is more costly"},"children":[]}]},{"data":{"text":"光盘"},"children":[{"data":{"text":"explain the difference of DVD-RAM and flash memory "},"children":[{"data":{"text":"DVD-RAM "},"children":[{"data":{"text":" data is stored/written using lasers/optical media "},"children":[]},{"data":{"text":"DVD-RAM uses phase changing recording, in which varying laser intensities cause targeted areas in the phase change recording layer to alternate between an amorphous and a crystalline state."},"children":[]},{"data":{"text":" uses a rotating disk with concentric tracks "},"children":[]},{"data":{"text":" allows read and write operation to occur simultaneously   "},"children":[]}]},{"data":{"text":"flash memory"},"children":[{"data":{"text":" most are NAND-based flash memory "},"children":[]},{"data":{"text":" there are no moving parts "},"children":[]},{"data":{"text":" uses a grid of columns and rows that has two transistors at each intersection "},"children":[]},{"data":{"text":" one transistor is called a floating gate "},"children":[]},{"data":{"text":" the second transistor is called the control gate "},"children":[]},{"data":{"text":" memory cells store voltages which can represent either a 0 or a 1 "},"children":[]},{"data":{"text":" essentially the movement of electrons is controlled to read/write "},"children":[]},{"data":{"text":" not possible to over-write existing data; it is necessary to first erase the old data then write the new data in the same location "},"children":[]}]}]},{"data":{"text":" explain the difference of DVD-RW and DVD-RAM  "},"children":[{"data":{"text":"DVD-RW "},"children":[{"data":{"text":"uses a single spiral track "},"children":[]},{"data":{"text":"only allows write OR read operation to occur as separate operations "},"children":[]},{"data":{"text":"requires special packet reading/writing software "},"children":[]},{"data":{"text":"in order to write new data to the disc the existing data must be completely erased "},"children":[]},{"data":{"text":"performance degrades/becomes unreliable after 1000 record/erase cycles "},"children":[]},{"data":{"text":"single sided, 4.7 Gb capacity "},"children":[]},{"data":{"text":"disc rotates at different speeds/constant linear velocity "},"children":[]}]},{"data":{"text":"DVD-RAM "},"children":[{"data":{"text":"uses several concentric tracks "},"children":[]},{"data":{"text":"allows simultaneous read/write operations "},"children":[]},{"data":{"text":"requires no special read/write software "},"children":[]},{"data":{"text":"makes use of sectors to store data "},"children":[]},{"data":{"text":"repeatedly read, write and erase/100 000 record/erase cycles possible "},"children":[]},{"data":{"text":"single or double sided, 4.7 Gb capacity per side "},"children":[]},{"data":{"text":"disc rotates at a constant speed/constant angular velocity "},"children":[]}]}]}]}]}]},{"data":{"text":"第一章、第二章","expandState":"collapse"},"children":[{"data":{"text":"前两章内容请参见JNotes网站 www.yangboyu.net"},"children":[]}]}]},"template":"default","theme":"fresh-blue","version":"1.4.43"}